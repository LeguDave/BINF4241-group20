Assignment 5

	Part 1 (Tim)
For this Assignment I was using JGrasp as my IDE. I hope everything works fine in yours too.
The gameboard class generates itself with a random arrangment of ladders and snakes.
For testing purposes I added a fixed_gameboard class and made a fixed_movement class that takes it as an argument. In the class file it is described which fixed state of a gameboard I implemented.
All tests were passed without any bug fixes to the original code. The code seems stable as is, since we did our own extensive testing before handing in assignment 1.
All test classes are named like the original classes with a Test suffix added.
The only class that is not tested is the main class as it has no methods/code on its own really. 
To run the tests, either run them individually or compile and run the "SnakesAndLaddersTetstRunner.java" file, which runs all test.


	Part 2 (Ashly)
		Make all tests pass by bug fixing
		Document fixed bugs (natural language)

	Part3 (David)
		Implement (natural language) UNO Rules, adressing these points:
			a) which inputs are accepted?
			b) what does it do with the inputs?
			c) what are the expected outputs?
		Make Class Diagram of theoretical implementation (inheritance and interfaces required)
		Implement test cases (in java code)
		Document test cases using javadoc

General: Use this file to write about the choices we made and everything that should be considered for the evaluation
Deadline: Friday 13th of December 18:00